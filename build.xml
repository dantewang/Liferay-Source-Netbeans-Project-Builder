<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="GlobalSource" default="build" basedir=".">
	<property file="build.properties" />

	<property name="project.dir" value="${basedir}/portal" />
	<property name="sdk.dir" value="${portal.dir}/tools/sdk" />

	<property name="module.list" value="" />
	<property name="test.list" value="" />

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${portal.dir}/lib/development/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<macrodef name="append-source-list">
		<attribute name="module" />

		<sequential>
			<set-module-source-directory module="@{module}" />

				<if>
					<available file="${src.dir}/build.xml" />
					<then>
						<if>
							<equals arg1="${module.list}" arg2="" />
							<then>
								<var name="concat" value="${src.dir.name}" />
							</then>
							<else>
								<var name="concat" value="${module.list},${src.dir.name}" />
							</else>
						</if>
						<var name="module.list" value="${concat}" />

						<concat destfile="${project.dir}/nbproject/project.properties" append="true">file.reference.${src.dir.name}=@{module}
src.${src.dir.name}.dir=$${file.reference.${src.dir.name}}

</concat>
					</then>
				</if>

				<var name="src.dir" unset="true" />
				<var name="src.dir.name" unset="true" />
		</sequential>
	</macrodef>

	<macrodef name="append-test-list">
		<attribute name="module" />

		<sequential>
			<set-module-source-directory module="@{module}" />

				<if>
					<available file="${src.dir}/build.xml" />
					<then>
						<if>
							<equals arg1="${test.list}" arg2="" />
							<then>
								<var name="concat" value="${src.dir.name}" />
							</then>
							<else>
								<var name="concat" value="${test.list},${src.dir.name}" />
							</else>
						</if>
						<var name="test.list" value="${concat}" />

						<concat destfile="${project.dir}/nbproject/project.properties" append="true">file.reference.${src.dir.name}.test=@{module}
test.${src.dir.name}.dir=$${file.reference.${src.dir.name}.test}

</concat>
					</then>
				</if>

				<var name="src.dir" unset="true" />
				<var name="src.dir.name" unset="true" />
		</sequential>
	</macrodef>

	<macrodef name="set-module-source-directory">
		<attribute name="module" />

		<sequential>
			<dirname property="src.dir" file="@{module}" />

			<basename property="src.dir.name" file="${src.dir}" />

			<if>
				<equals arg1="${src.dir.name}" arg2="WEB-INF" />
				<then>
					<dirname property="temp" file="${src.dir}" />

					<var name="src.dir" unset="true" />

					<dirname property="src.dir" file="${temp}" />

					<var name="temp" unset="true" />
					<var name="src.dir.name" unset="true" />

					<basename property="src.dir.name" file="${src.dir}" />
				</then>
			</if>
		</sequential>
	</macrodef>

	<target name="build">
		<mkdir dir="classes" />

		<javac
			srcdir="${basedir}/src"
			destdir="${basedir}/classes"
			includeantruntime="false"
		/>

		<unzip src="${project.dir}/CleanProject.zip" dest="${project.dir}/" />

		<copy file="${project.dir}/nbproject/default.properties" tofile="${project.dir}/nbproject/project.properties" />

		<for param="module">
			<path>
				<dirset dir="${portal.dir}">
					<include name="**/src"/>
				</dirset>
			</path>
			<sequential>
				<append-source-list
					module="@{module}"
				/>
			</sequential>
		</for>

		<for param="test">
			<path>
				<dirset dir="${portal.dir}">
					<include name="**/test"/>
				</dirset>
			</path>
			<sequential>
				<append-test-list
					module="@{test}"
				/>
			</sequential>
		</for>

		<concat destfile="${project.dir}/nbproject/project.properties" append="true">file.reference.portal-test.test=${portal.dir}/portal-test
test.portal-test.dir=$${file.reference.portal-test.test}

</concat>

		<concat destfile="${project.dir}/nbproject/project.properties" append="true">file.reference.portal-test-internal.test=${portal.dir}/portal-test-internal
test.portal-test-internal.dir=$${file.reference.portal-test-internal.test}

</concat>

		<var name="concat" value="${test.list},portal-test,portal-test-internal" />

		<var name="test.list" value="${concat}" />

		<concat destfile="${project.dir}/nbproject/project.properties" append="true">file.reference.portal-lib=${portal.dir}/lib
javac.classpath=\
	$${file.reference.portal-lib}</concat>


		<java classname="CreateProject" classpath="${basedir}/classes">
			<arg value="${project.name}" />
			<arg value="${module.list}" />
			<arg value="${test.list}" />
		</java>
	</target>

	<target name="clean">
		<delete dir="classes" />
		<delete dir="${project.dir}/nbproject" />
	</target>
</project>
